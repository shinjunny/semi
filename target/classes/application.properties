spring.application.name=board
spring.mvc.static-path-pattern=/static/**

# DB접속설정
# spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
# spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=scott
spring.datasource.password=tiger

# 쿼리 (mybatis) 설정
mybatis.mapper-locations=classpath:mapper/**/*.xml
mybatis.configuration.map_underscore-to-camel-case=true
mybatis.type-aliases-package=com.dish.board.vo

# jdbc 로그 출력 설정
# trace < debug < info < warn < error < off
# SQL 쿼리문을 콘솔 출력
logging.level.jdbc.sqlonly=off

# SQL 쿼리문 수행 시간
logging.level.jdbc.sqltiming=info

# SQL 쿼리문 결과 확인
logging.level.jdbc.resultsettable=info

# SQL 쿼리 검사를 로그에 출력
logging.level.jdbc.audit=off

# SQL 연결 및 해제 정보
logging.level.jdbc.connection=off

# SQL 데이터 로그
logging.level.jdbc.resultset=off

logging.pattern.console=%clr(%d{HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr([rowNumber]: %line){red} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
